"""Initial migration

Revision ID: 73cbad05ecc9
Revises: 
Create Date: 2025-10-06 17:41:24.195129

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision: str = '73cbad05ecc9'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

# Constants
USERS_ID_REF = 'users.id'


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('full_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('role', sa.Enum('USER', 'MODERATOR', 'ADMIN', name='userrole'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('hashed_password', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('password_reset_token', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('verification_token', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('activity_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('activity_type', sa.Enum('LOGIN', 'TRILHA_COMPLETION', 'PROJETO_SUBMISSION', 'QMENTOR_INTERACTION', 'POMODORO_SESSION', 'STREAK_ACHIEVEMENT', 'LEVEL_UP', name='activitytype'), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('xp_earned', sa.Integer(), nullable=False),
    sa.Column('activity_metadata', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], [USERS_ID_REF], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('gamification_profiles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('total_xp', sa.Integer(), nullable=False),
    sa.Column('current_level', sa.Enum('INICIANTE', 'EXPLORADOR', 'ESPECIALISTA', 'MESTRE', 'QUANTUM_GUARDIAN', name='gamificationlevel'), nullable=False),
    sa.Column('current_streak', sa.Integer(), nullable=False),
    sa.Column('longest_streak', sa.Integer(), nullable=False),
    sa.Column('completed_trilhas', sa.Integer(), nullable=False),
    sa.Column('completed_projects', sa.Integer(), nullable=False),
    sa.Column('pomodoro_sessions', sa.Integer(), nullable=False),
    sa.Column('last_activity_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], [USERS_ID_REF], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('user_project_submissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('project_type', sa.Enum('RESEARCH', 'STARTUP', name='projecttype'), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=2000), nullable=False),
    sa.Column('github_url', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('demo_url', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('status', sa.Enum('DRAFT', 'SUBMITTED', 'UNDER_REVIEW', 'APPROVED', 'REJECTED', name='projectstatus'), nullable=False),
    sa.Column('submission_notes', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.Column('reviewer_feedback', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.Column('reviewed_at', sa.DateTime(), nullable=True),
    sa.Column('reviewed_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['reviewed_by'], [USERS_ID_REF], ),
    sa.ForeignKeyConstraint(['user_id'], [USERS_ID_REF], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_project_submissions')
    op.drop_table('gamification_profiles')
    op.drop_table('activity_logs')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###